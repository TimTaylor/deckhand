[{"path":"https://github.com/co-analysis/deckhand/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Crown Copyright (Cabinet Office) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://github.com/co-analysis/deckhand/articles/charts.html","id":"theme_co_report","dir":"Articles","previous_headings":"Themes, colours and scales","what":"theme_co_report","title":"Charts and graphics","text":"theme_co_report() function provides theme ggplot2::ggplot() charts. arguments function allow modify position legend, whether legend title, inclusion axis text titles.","code":"test_plot +   theme_co_report(     axis_title = \"both\"   )"},{"path":"https://github.com/co-analysis/deckhand/articles/charts.html","id":"co_colours","dir":"Articles","previous_headings":"Themes, colours and scales","what":"co_colours","title":"Charts and graphics","text":"deckhand package provides easy access Cabinet Office corporate colour palette co_colours vector. can display palette RStudio IDE viewer window calling show_co_colours() produces simple plot colours.","code":"co_colours #>       blue light_blue       grey light_grey  dark_blue     violet        red  #>  \"#005abb\"  \"#5bb4e5\"  \"#4d4e53\"  \"#cacac8\"  \"#1a2792\"  \"#78256e\"  \"#a23138\"  #>     orange     yellow      green       aqua  #>  \"#cc5a13\"  \"#ecac00\"  \"#879637\"  \"#57bab7\" show_co_colours()"},{"path":"https://github.com/co-analysis/deckhand/articles/charts.html","id":"scale_co-functions","dir":"Articles","previous_headings":"Themes, colours and scales","what":"scale_co functions","title":"Charts and graphics","text":"can use scale_colour_co() scale_fill_co() use one Cabinet Office’s corporate colours basis series colour/fill tints.","code":"summary_df <- palmerpenguins::penguins |>   dplyr::group_by(species) |>   dplyr::summarise(bill_length_mm = mean(bill_length_mm, na.rm = TRUE))  ggplot(    summary_df,     aes(x = species, y = bill_length_mm, fill = species)) +    geom_col() +   labs(     title = \"Average penguin bill length (mm) by species\"   ) +   scale_fill_co(fill = \"orange\") +   theme_co_report()"},{"path":"https://github.com/co-analysis/deckhand/articles/charts.html","id":"inserting-and-exporting-plots","dir":"Articles","previous_headings":"","what":"Inserting and exporting plots","title":"Charts and graphics","text":"default knitr (engine processes Rmarkdown documents) render charts images, using raster PNG images scale well contents (axis text data labels) selected. can set device options code chunks svg/svglite enable scalable vector image formats. However still render inside HTML <img> tags making impossible select, rendered PDF converted raster images.","code":""},{"path":"https://github.com/co-analysis/deckhand/articles/charts.html","id":"insert_svg","dir":"Articles","previous_headings":"Inserting and exporting plots","what":"insert_svg","title":"Charts and graphics","text":"aid accessibility output reports work effectively layout CSS deckhand::co_deck() template, use insert_svg() function. bypasses knitr insert SVG code chart output report fully scaleable selectable. must pass insert_svg() ggplot2::ggplot() chart along width height relating number columns rows content box plot contained within. Read layout article details underlying grid structure. <![CDATA[     .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {       fill: none;       stroke: #000000;       stroke-linecap: round;       stroke-linejoin: round;       stroke-miterlimit: 10.00;     }     .svglite text {       white-space: pre;     }   ]]>405060170180190200210220230Flipper length (mm)Bill length (mm)AdelieChinstrapGentooPenguin size species","code":"p <- test_plot +   theme_co_report(     axis_title = \"both\"   )  insert_svg(p, width = 8, height = 8)"},{"path":"https://github.com/co-analysis/deckhand/articles/charts.html","id":"export_plot","dir":"Articles","previous_headings":"Inserting and exporting plots","what":"export_plot","title":"Charts and graphics","text":"Occasionally may want use chart report another document, can export plots either SVG PNG format using export_plot() function. insert_svg() must provide ggplot2::ggplot() chart width height grid columns/rows, must also provide file name. provide file name ending .svg plot saved SVG image, whereas provide file name saved PNG image (file extensions .jpg overridden).","code":"export_plot(   gg_plot = test_plot,    filename = \"test_plot.png\",    width = 8, height = 8)"},{"path":"https://github.com/co-analysis/deckhand/articles/collaboration.html","id":"setting-up-the-google-sheet","dir":"Articles","previous_headings":"","what":"Setting up the Google Sheet","title":"Non-R user collaboration","text":"set Google Sheet store edit narrative text elements slides .title .maintext elements page. pages make use .secondary-text element additional narrative boxes page ensure sufficient number columns setup named. example sheet:","code":""},{"path":"https://github.com/co-analysis/deckhand/articles/collaboration.html","id":"working-with-google-sheets-and-rmarkdown","dir":"Articles","previous_headings":"","what":"Working with Google Sheets and Rmarkdown","title":"Non-R user collaboration","text":"set Google Sheet can download save Sheet CSV file folder Rmarkdown report. Add following report’s setup chunk read sheet set vectors make easy access narrative elements later stages report. able simply call title text page taking relevant vector using relevant page_id select specific text interest.","code":"page_narratives <- readr::read_csv(\"google_sheet.csv\") page_titles <- purrr::set_names(   x = page_narratives$page_title,   nm = page_narratives$page_id ) page_text <- purrr::set_names(   x = page_narratives$page_text,   nm = page_narratives$page_id ) ::::{.grid-page .single-content}  :::{.title} `r page_titles[\"page1\"]` :::    :::{.maintext} `r page_text[\"page1\"]` :::  :::{.content-1} ```{r} my_awesome_chart_function() ``` :::  ::::"},{"path":"https://github.com/co-analysis/deckhand/articles/layout.html","id":"page-structure","dir":"Articles","previous_headings":"","what":"Page structure","title":"Layout and structure","text":"page created Rmarkdown creating grid-page entity ::::{.grid-page .page-type} .page-type layout design want use (remember close four colons :::: next page). can include page elements :::{.title}, :::{.maintext} :::{.content1}, closing element three colons :::. aid code scanning/navigation recommended using convention four colons DIV relating page three elements inside page. See example.","code":"::::{.grid-page .single-content}  :::{.title} My page title :::  :::{.maintext} The narrative text for the page, goes here. :::  :::{.content-1} ```{r} my_awesome_chart_function() ``` :::  ::::"},{"path":"https://github.com/co-analysis/deckhand/articles/layout.html","id":"in-built-layouts","dir":"Articles","previous_headings":"","what":"In-built layouts","title":"Layout and structure","text":"discussed can use .page-type specify one default layouts. default layouts support .title element (always located upper left corner page) .maintext element narrative prose (position varies based layout). also three special page layouts: .front-cover, .divider .notes-page.","code":""},{"path":"https://github.com/co-analysis/deckhand/articles/layout.html","id":"front-cover","dir":"Articles","previous_headings":"In-built layouts","what":".front-cover","title":"Layout and structure","text":".front-cover layout first page report, following structure: .security-marking element optional, included text inside section repeated security marking header every page report. example resulting report marked “OFFICIAL-SENSITIVE” writing .security-marking repeated every page. .logo element inserting organisation logo, deckhand::co_logo() insert Cabinet Office’s logo . using custom logo recommended provide SVG file can scale appropriately. .title .subtitle elements front cover used generate footer content subsequent pages report (except divider pages).","code":"::::{.grid-page .front-cover}  :::{.security-marking} SECURITY-MARKING :::  :::{.logo} `r deckhand::co_logo()` :::  :::{.title} Report title :::  :::{.panel} :::  :::{.subtitle} Report subtitle :::  :::{.date} DD Month YYYY<br /> Team Name, Cabinet Office :::  ::::"},{"path":"https://github.com/co-analysis/deckhand/articles/layout.html","id":"divider","dir":"Articles","previous_headings":"In-built layouts","what":".divider","title":"Layout and structure","text":".divider page provides way clearly marking new sections, following structure:","code":"::::{.grid-page .divider}  :::{.title} My section title :::  :::{.maintext} An introduction to or summary of the section. :::  ::::"},{"path":"https://github.com/co-analysis/deckhand/articles/layout.html","id":"notes-page","dir":"Articles","previous_headings":"In-built layouts","what":".notes-page","title":"Layout and structure","text":".notes-page intended Annexes, following structure: .title .maintext elements notes page span width page.","code":"::::{.grid-page .notes-page}  :::{.title} Notes page :::  :::{.maintext} Notes text. :::  ::::"},{"path":"https://github.com/co-analysis/deckhand/articles/layout.html","id":"custom-layouts","dir":"Articles","previous_headings":"","what":"Custom layouts","title":"Layout and structure","text":"report template built 12 row 12 column grid. addition -built layouts, bespoke layouts can also constructed using custom CSS classes. format .start-row-X .end-column-Y, allowing specify start end rows columns content box. Bear mind .title element 4--4 box starting upper left corner, hard-coded CSS title element. standard .maintext element () occupies rows 1-4 columns 5-12, replicate custom page use classes .start-row-1 .end-row-4 .start-column-5 .end-column-12 .maintext, ensure also include .maintext class text flows across two columns. developing report want see shape built-custom-layout elements can add .outline class provide border, included final versions report.","code":""},{"path":"https://github.com/co-analysis/deckhand/articles/workflow.html","id":"rendering-to-html-and-pdf-using-pagedown","dir":"Articles","previous_headings":"","what":"Rendering to HTML and PDF using {pagedown}","title":"Workflow","text":"deckhand::co_deck() layout scaffold around pagedown::html_paged() produces Rmarkdown HTML document simulates physical pages. Using Knit command inside RStudio IDE call rmarkdown::render() produces HTML. However, often desired/required provide others PDF versions reports. facilitate can use pagedown::chrome_print() command, renders Rmarkdown HTML uses background instance Chrome save HTML file PDF.","code":""},{"path":"https://github.com/co-analysis/deckhand/articles/workflow.html","id":"workflow-example","dir":"Articles","previous_headings":"","what":"Workflow example","title":"Workflow","text":"fictional example working data Civil Service People Survey, code functional run actual datasets. Let’s assume RStudio project People Survey analysis, within project folder separate piece analysis/report. folder example report contains following files: 01_data.R file script wrangle, analyse summarise raw microdata survey. output script 2020-04_analysis.RDS file stores processed microdata. 2020-04_report.Rmd deckhand::co_deck() Rmarkdown file, result knitting Rmd 2020-04_report.html file using pagedown::chrome_print() produces 2020-04_report.pdf file.","code":"people_survey_analysis  ├ 2021-12_old-report  └ 2022-04_new-report     ├ 01_data.R     ├ 2020-04_analysis.RDS     ├ 2020-04_report.html     ├ 2020-04_report.pdf     └ 2020-04_report.Rmd"},{"path":"https://github.com/co-analysis/deckhand/articles/workflow.html","id":"data-r-and-the-rds-file","dir":"Articles","previous_headings":"Workflow example","what":"01_data.R and the RDS file","title":"Workflow","text":"two reasons microdata processed separate script. First, importantly, approach minimises risk sensitive/personal data included output report. microdata loaded Rmarkdown file risk may accidentally include microdata extract output report. Second, approach makes itterating development report much easier. internal microdata files generally quite large loading time want work report re-knit Rmardkown document time consuming, especially already extracted data making layout/cosmetic changes. main aim analyse data save necessary summary tables report list saved single RDS file.","code":"# My data analysis script # 2020-04-01  my_tables <- list()  # load raw data csps2020_raw <- readr::read_csv(\"path/to/raw/2020data.csv\") csps2021_raw <- readr::read_csv(\"path/to/raw/2021data.csv\")  # engagement index by grade  ees_grade <- csps2021_raw %>%   dplyr::group_by(grade) %>%   dplyr::summarise(ees = mean(ees, na.rm = TRUE),                    .groups = \"drop\") %>%   dplyr::mutate(year = 2021) %>%   dplyr::bind_rows(     csps2020_raw %>%       dplyr::group_by(grade) %>%       dplyr::summarise(ees = mean(ees, na.rm = TRUE),                        .groups = \"drop\") %>%       dplyr::mutate(year = 2020)   )  my_tables$ees_grade <- ees_grade  # more code  readr::write_rds(my_tables, \"2020_04_analysis.RDS\")"},{"path":"https://github.com/co-analysis/deckhand/articles/workflow.html","id":"report-rmd-and-html-and-pdf","dir":"Articles","previous_headings":"Workflow example","what":"2020_04_report.Rmd (and html and pdf)","title":"Workflow","text":"separate data processing script RDS approach listed use Rmarkdown document load RDS file setup chunk follows. can access individual summary tables produce output charts tables. can regularly knit Rmarkdown report HTML view development report, recommended periodically use pagedown::chrome_print() generate end PDF can discrepancies HTML rendered browser Chrome exports HTML PDF.","code":"--- pagetitle: \"Report title\" output:   deckhand::co_deck ---  ``` {r setup, include=FALSE} library(tidyverse) library(deckhand)  knitr::opts_chunk$set(   echo = FALSE, warning = FALSE, message = FALSE )  my_tables <- readr::read_rds(\"2020_04_analysis.R\")  ```  ::::{.grid-page .front-cover} :::{.content2} p <- ggplot2::ggplot(   my_tables$ees_grade,    ggplot2::aes(x = grade, y = value, fill = year)) +   geom_col(position = \"dodge\")    insert_svg(p, width = 4, hight = 8) :::"},{"path":"https://github.com/co-analysis/deckhand/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Crown Copyright 2022. Copyright holder. Matt Kerlogue. Author, maintainer.","code":""},{"path":"https://github.com/co-analysis/deckhand/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kerlogue M (2022). deckhand: Create data heavy pagedown reports (slide decks). https://co-analysis.github.io/deckhand/, https://github.com/co-analysis/deckhand.","code":"@Manual{,   title = {deckhand: Create data heavy {pagedown} reports (slide decks)},   author = {Matt Kerlogue},   year = {2022},   note = {https://co-analysis.github.io/deckhand/, https://github.com/co-analysis/deckhand}, }"},{"path":"https://github.com/co-analysis/deckhand/index.html","id":"deckhand","dir":"","previous_headings":"","what":"Create data heavy {pagedown} reports (slide decks)","title":"Create data heavy {pagedown} reports (slide decks)","text":"deckhand package wrapper around {pagedown} package enable make reports Rmarkdown align (broadly) Cabinet Office’s corporate identity guidelines. Often data heavy reports laid using presentation software therefore called “slide decks” even though aren’t presented usually turned PDFs printed. deckhand experienced seaman merchant navy helps general running ship, deckhand package helps produce report.","code":""},{"path":"https://github.com/co-analysis/deckhand/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create data heavy {pagedown} reports (slide decks)","text":"package CRAN, can install using {remotes} package:","code":"remotes::install_github(\"co-analysis/deckhand\")"},{"path":"https://github.com/co-analysis/deckhand/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Create data heavy {pagedown} reports (slide decks)","text":"enable {deckhand} work R Markdown file set output format YAML header deckhand::co_deck. template Rmarkdown file included package. can access RStudio selecting: File > New File > New R Markdown... pop-dialog window select Template select CO deck. {deckhand} makes use Rmarkdown’s native support HTML class attributes used {deckhand} CSS {pagedown} package create paged HTML documents. CSS includes large number built-layout designs mean don’t need think specific positioning elements, instead using page type default classes rely positioning. However, CSS also supports custom layouts work underlying grid system. create page Rmarkdown document using fenced DIV elements, created three colons (e.g. :::{.class}), setting class relevant CSS classes. page created Rmarkdown creating grid-page entity ::::{.grid-page .page-type} .page-type layout design want use (remember close four colons :::: next page).can include page elements :::{.title}, :::{.maintext} :::{.content1}, closing element :::. aid code scanning/navigation recommended using convention four colons DIV relating page three elements inside page. See example. also layout report’s front cover divider pages.  can see full example layouts calling deckhand::show_example_report(), open example default browser.","code":"::::{.grid-page .single-content}  :::{.title} My page title :::  :::{.maintext} The narrative text for the page, goes here. :::  :::{.content-1} ```{r} my_awesome_chart_function() ``` :::  ::::"},{"path":"https://github.com/co-analysis/deckhand/index.html","id":"additional-features","dir":"","previous_headings":"","what":"Additional features","title":"Create data heavy {pagedown} reports (slide decks)","text":"addition Rmarkdown template output format, {deckhand} also provides number useful functions support creation reports: Functions help creating inserting ggplot charts Functions help create output tables using {gt} package Cabinet Office corporate colour palette also available via vector co_colours Cabinet Office colour palette understand full range features see package documentation website.","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/co_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector of CO colours — co_colours","title":"Vector of CO colours — co_colours","text":"vector Cabinet Office's corporate palette","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/co_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector of CO colours — co_colours","text":"","code":"co_colours"},{"path":"https://github.com/co-analysis/deckhand/reference/co_colours.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vector of CO colours — co_colours","text":"object class character length 11.","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/co_deck.html","id":null,"dir":"Reference","previous_headings":"","what":"CO data reports — co_deck","title":"CO data reports — co_deck","text":"CO data reports","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/co_deck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO data reports — co_deck","text":"","code":"co_deck(css = NULL, ...)"},{"path":"https://github.com/co-analysis/deckhand/reference/co_deck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CO data reports — co_deck","text":"css Additional css files (default NULL) ... Arguments pass pagedown::html_paged()","code":""},{"path":[]},{"path":"https://github.com/co-analysis/deckhand/reference/co_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"CO logo — co_logo","title":"CO logo — co_logo","text":"simple function return embedded logo, either html element file path image.","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/co_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CO logo — co_logo","text":"","code":"co_logo(out = c(\"html\", \"path\"))"},{"path":"https://github.com/co-analysis/deckhand/reference/co_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CO logo — co_logo","text":"Either html path","code":""},{"path":[]},{"path":"https://github.com/co-analysis/deckhand/reference/export_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Export report plot as PNG — export_plot","title":"Export report plot as PNG — export_plot","text":"Export report plots sizing similar plot created insert_svg(). Plots exported SVG file extension .svg otherwise exported PNG format.","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/export_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export report plot as PNG — export_plot","text":"","code":"export_plot(gg_plot, filename, width, height)"},{"path":"https://github.com/co-analysis/deckhand/reference/export_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export report plot as PNG — export_plot","text":"gg_plot ggplot render filename file export width width report columns height height report columns","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/insert_svg.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert plot as SVG — insert_svg","title":"Insert plot as SVG — insert_svg","text":"function convert ggplot object SVG image rendering deckhand column/row grid structure","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/insert_svg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert plot as SVG — insert_svg","text":"","code":"insert_svg(gg_plot, width, height)"},{"path":"https://github.com/co-analysis/deckhand/reference/insert_svg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert plot as SVG — insert_svg","text":"gg_plot ggplot convert width width plot, page columns height height plot, page columns","code":""},{"path":[]},{"path":"https://github.com/co-analysis/deckhand/reference/output_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a gt pipeline into output format — output_table","title":"Export a gt pipeline into output format — output_table","text":"Take table constructed via gt package format work pagedown report template css files.","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/output_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a gt pipeline into output format — output_table","text":"","code":"output_table(   x,   id = NULL,   min_max_styling = FALSE,   drop_header = FALSE,   small = FALSE )"},{"path":"https://github.com/co-analysis/deckhand/reference/output_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a gt pipeline into output format — output_table","text":"x gt table id unique id table min_max_styling Convert min/max flags css classes drop_header Drop table header row(s) small Whether render smaller font","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/scale_co.html","id":null,"dir":"Reference","previous_headings":"","what":"Use CO colours for colour scales — scale_co","title":"Use CO colours for colour scales — scale_co","text":"scale_*_co() functions provide way easily apply colour CO corporate palette chart, take single colour name apply tints colour relevant series (colour/fill).","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/scale_co.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use CO colours for colour scales — scale_co","text":"","code":"scale_colour_co(..., colour, direction = 1, show.na = FALSE)  scale_fill_co(..., fill, direction = 1, show.na = FALSE)"},{"path":"https://github.com/co-analysis/deckhand/reference/scale_co.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use CO colours for colour scales — scale_co","text":"... arguments passed discrete scale colour colour name co_colours() scale_colour_co() direction direction scale show.na Whether show NA values fill colour name co_colours() scale_fill_co()","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/show_co_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Show palette colours — show_co_colours","title":"Show palette colours — show_co_colours","text":"function show CO colour palette","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/show_co_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show palette colours — show_co_colours","text":"","code":"show_co_colours()"},{"path":"https://github.com/co-analysis/deckhand/reference/show_example_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Open example report in the browser — show_example_report","title":"Open example report in the browser — show_example_report","text":"example report showing layout options provided package. function loads report browser","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/show_example_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open example report in the browser — show_example_report","text":"","code":"show_example_report()"},{"path":"https://github.com/co-analysis/deckhand/reference/theme_co_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Report plot theme — theme_co_report","title":"Report plot theme — theme_co_report","text":"Provide common styling ggplot objects","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/theme_co_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report plot theme — theme_co_report","text":"","code":"theme_co_report(   base = \"minimal\",   legend_position = \"top\",   legend_title = \"none\",   axis_text = \"both\",   axis_title = \"none\" )"},{"path":"https://github.com/co-analysis/deckhand/reference/theme_co_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report plot theme — theme_co_report","text":"base base ggplot theme (either minimal void) legend_position location plot legend legend_title title legend \"none\" (default) title axis_text axis include text : \"\" (default), \"x\", \"y\" \"none\" axis_title axis include titles : \"\", \"x\", \"y\" \"none\" (default)","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/tint_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce tints of hex colours — tint_hex","title":"Produce tints of hex colours — tint_hex","text":"function produce tinted version hexadecimal colour code","code":""},{"path":"https://github.com/co-analysis/deckhand/reference/tint_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce tints of hex colours — tint_hex","text":"","code":"tint_hex(colour, tint, bg_colour = \"#ffffff\")"},{"path":"https://github.com/co-analysis/deckhand/reference/tint_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce tints of hex colours — tint_hex","text":"colour colour tint tint percentage tint desired, higher 'lighter' bg_colour background colour tint , defaults white","code":""},{"path":[]}]
